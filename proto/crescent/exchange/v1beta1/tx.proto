syntax = "proto3";

package crescent.exchange.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "crescent/exchange/v1beta1/exchange.proto";

option go_package                      = "github.com/crescent-network/crescent/v5/x/exchange/types";
option (gogoproto.goproto_getters_all) = false;

service Msg {
  rpc CreateSpotMarket(MsgCreateSpotMarket) returns (MsgCreateSpotMarketResponse);
  rpc PlaceSpotLimitOrder(MsgPlaceSpotLimitOrder) returns (MsgPlaceSpotLimitOrderResponse);
  rpc PlaceSpotMarketOrder(MsgPlaceSpotMarketOrder) returns (MsgPlaceSpotMarketOrderResponse);
  rpc CancelSpotOrder(MsgCancelSpotOrder) returns (MsgCancelSpotOrderResponse);
  rpc SwapExactIn(MsgSwapExactIn) returns (MsgSwapExactInResponse);
}

message MsgCreateSpotMarket {
  string sender      = 1;
  string base_denom  = 2;
  string quote_denom = 3;
}

message MsgCreateSpotMarketResponse {
  uint64 market_id = 1;
}

message MsgPlaceSpotLimitOrder {
  string sender    = 1;
  uint64 market_id = 2;
  bool   is_buy    = 3;
  string price    = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string quantity = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgPlaceSpotLimitOrderResponse {
  bool   rested            = 1;
  uint64 order_id          = 2;
  string executed_quantity = 3
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string executed_quote = 4
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgPlaceSpotMarketOrder {
  string sender    = 1;
  uint64 market_id = 2;
  bool   is_buy    = 3;
  string quantity = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgPlaceSpotMarketOrderResponse {
  string executed_quantity = 1
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string executed_quote = 2
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgCancelSpotOrder {
  string sender   = 1;
  uint64 order_id = 2;
}

message MsgCancelSpotOrderResponse {}

message MsgSwapExactIn {
  string                   sender     = 1;
  repeated uint64          routes     = 2;
  cosmos.base.v1beta1.Coin input      = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin min_output = 4 [(gogoproto.nullable) = false];
}

message MsgSwapExactInResponse {
  cosmos.base.v1beta1.Coin output = 1 [(gogoproto.nullable) = false];
}
